# プラグインの管理
# 基本的にはinit.vimでgithubからダウンロード
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

# PlantUML用のシンタックスハイライト
[[plugins]]
repo = 'aklt/plantuml-syntax'

# ブランチやタグを指定したいとき
[[plugins]]
repo = 'delphinus35/typescript-vim'
rev  = 'colorize-template-strings'

# カラーテーマのicebergを設定
[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
 source ~/.config/nvim/plugins/iceberg.rc.vim
'''

# 特定の条件で読み込みたいとき
[[plugins]]
repo = 'elzr/vim-json'
if   = '''! has('kaoriya')'''

# ファイラ上のアイコン表示
[[plugins]]
repo ='kristijanhusak/defx-icons'

# ファイラ上のgit表示
[[plugins]]
repo ='kristijanhusak/defx-git'
hook_add = '''
  source ~/.config/nvim/plugins/defx-git.rc.vim
'''

# ファイラ
[[plugins]]
repo ='Shougo/defx.nvim'
on_cmd = 'Defx'
depends = ['defx-icons', 'defx-git']
hook_add = '''
  source ~/.config/nvim/plugins/defx.rc.vim
'''

# ターミナル
[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
  source ~/.config/nvim/plugins/deol.rc.vim
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
  let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
'''

[[plugins]]
repo = 'cespare/vim-toml'

# TODO:Lterminal
[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"
hook_add = '''
'''

# コメント関連
[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo='evidens/vim-twig'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'


# カッコを付ける系
[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
  let g:auto_save = 1
  let g:auto_save_in_insert_mode = 0
'''

# ステータスラインやタブ周りの見た目の設定
[[plugins]]
repo    = 'vim-airline/vim-airline'
depends = ['vim-fugitive', 'vim-airline-themes']
hook_add = '''
 source ~/.config/nvim/plugins/airline.rc.vim
'''
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  " エラー行に表示するマーク
  let g:ale_sign_error = '⨉'
  let g:ale_sign_warning = '⚠'
  " エラー行にカーソルをあわせた際に表示されるメッセージフォーマット
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  " エラー表示の列を常時表示
  let g:ale_sign_column_always = 1

  " ファイルを開いたときにlint実行
  let g:ale_lint_on_enter = 1
  " ファイルを保存したときにlint実行
  let g:ale_lint_on_save = 1
  " 編集中のlintはしない
  let g:ale_lint_on_text_changed = 'never'

  " lint結果をロケーションリストとQuickFixには表示しない
  " 出てると結構うざいしQuickFixを書き換えられるのは困る
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 0
  let g:ale_open_list = 0
  let g:ale_keep_list_window_open = 0
'''

[[plugins]]
repo = 'nixprime/cpsm'
hook_add = '''
  let g:ctrlp_match_func = {'match': 'cpsm#CtrlPMatch'}
'''

# ブラウザ上のテキストエリアにてNVIMを起動する
[[plugins]]
repo = 'glacambre/firenvim'
hook_post_update = '''
  call firenvim#install(0)
'''

# Markdownをブラウザと同期して表示
[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app & yarn install'
hook_add = '''
  source ~/.config/nvim/plugins/markdown-preview.rc.vim
'''

# LSP(Laungage Server Protcol)用
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
on_i = 1
merged = '0'
hook_add = '''
 source ~/.config/nvim/plugins/coc-setting.rc.vim
'''
