[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''
# ブランチやタグを指定したいとき
[[plugins]]
repo = 'delphinus35/typescript-vim'
rev  = 'colorize-template-strings'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
 source ~/.config/nvim/plugins/iceberg.rc.vim
'''

# 特定の条件で読み込みたいとき
[[plugins]]
repo = 'elzr/vim-json'
if   = '''! has('kaoriya')'''

# 依存関係を指定したいとき
[[plugins]]
repo    = 'vim-airline/vim-airline'
depends = ['tagbar', 'vim-fugitive', 'vim-airline-themes']
hook_add = '''
set laststatus=2
let g:airline_theme = 'badwolf'
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#tabline#enabled = 1
'''

# 依存関係を指定したからと言って、自動でインストールはされない（ここは NeoBundle と違う）
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
" NERDTreeTabsをnvim起動時に同時に起動
let g:nerdtree_tabs_open_on_console_startup=1
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
  let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"
hook_add = '''
'''

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo='evidens/vim-twig'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
let g:auto_save = 1
let g:auto_save_in_insert_mode = 0
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
let g:tagbar_width = 30
let g:tagbar_autoshowtag = 1
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
" エラー行に表示するマーク
let g:ale_sign_error = '⨉'
let g:ale_sign_warning = '⚠'
" エラー行にカーソルをあわせた際に表示されるメッセージフォーマット
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
" エラー表示の列を常時表示
let g:ale_sign_column_always = 1

" ファイルを開いたときにlint実行
let g:ale_lint_on_enter = 1
" ファイルを保存したときにlint実行
let g:ale_lint_on_save = 1
" 編集中のlintはしない
let g:ale_lint_on_text_changed = 'never'

" lint結果をロケーションリストとQuickFixには表示しない
" 出てると結構うざいしQuickFixを書き換えられるのは困る
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 0
let g:ale_open_list = 0
let g:ale_keep_list_window_open = 0
'''


[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
hook_add = '~/.config/nvim/plugins/coc-setting.rc.vim'
